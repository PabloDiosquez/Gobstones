// Construir la función segmentoInicialDeLargo_de_ que, dado un número que
// representa a una cantidad y una lista de cualquier tipo, describe la lista que se obtiene
// de quedarse únicamente con esa cantidad de elementos de la lista comenzando por el
// primero (sus primeros elementos), o todos, si no hay suficientes. ¿Cuál es la
// precondición de esta función? ¿Qué nombre te parece adecuado en este caso para el
// parámetro de tipo número? ¿Para qué tipos de lista funciona tu solución?
// Por ejemplo, segmentoInicialDeLargo_de_(4,[4,8,15,16,99,42]) describe
// [4,8,15,16], mientras que segmentoInicialDeLargo_de_(2,[4,8,15,42])
// describe [4,8] y segmentoInicialDeLargo_de_(7,[4,8,15,42]) describe
// [4,8,15,42].

function segmentoInicialDeLargo_de_(largo, lista) {
    /*
        PROPÓSITO:
            * Describe la lista que representa un segmento de la lista dada, formada únicamente con una cantidad de elementos igual al largo dado. Si no hay sufientes elementos en la lista dada, describe la lista formada por todos los elementos.
        PARÁMETROS:
            * largo: Número
            * lista: [Elemento]
        TIPO: [Elemento]
        PRECONDICIONES:
            * La lista dada debe ser no vacía.
            * **largo** debe ser >= 0.
    */

    elementosPorRecorrer := lista

    largoDelSegmentoActual := 0

    segmentoDeListaActual := []

    while (not esVacía(elementosPorRecorrer) && largoDelSegmentoActual < largo) {
        segmentoDeListaActual := segmentoDeListaActual ++ [primero(elementosPorRecorrer)]
        largoDelSegmentoActual := largoDelSegmentoActual + 1
        
        elementosPorRecorrer := resto(elementosPorRecorrer)
    }
    
    return (segmentoDeListaActual)
}