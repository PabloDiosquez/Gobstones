// Escribir los siguientes procedimientos:
// a. PudrirManzana(), que en el caso de que en la celda actual haya al menos
// una manzana en buen estado y un gusano, pudre una manzana retirando un
// gusano
// OBSERVACIONES: las manzanas en buen estado se representan con bolitas
// de color Rojo, las manzanas podridas con bolitas de color Negro, y los
// gusanos con bolitas de color Verde.
// SUGERENCIA: primero dar el contrato de la siguiente subtarea y utilizarlo en
// la resolución.
// Reemplazar_Y_Por_(primerColorAReemplazar
// , segundoColorAReemplazar
// , colorAAgregar)
// b. Completar el código de Reemplazar_Y_Por_.
// c. PudrirHasta_Manzanas(cantidadAPudrir), que pudre hasta un
// máximo de manzanas dada por la cantidad. Puede que se pudran menos
// manzanas si no se dan las condiciones necesarias (no hay suficientes
// manzanas en buen estado, o suficientes gusanos, por ejemplo).

// a.
procedure PudrirManzana() {
    /*
        PROPÓSITO:
            * Pudre una manzana retirando un gusano, en el caso de que en la celda actual haya al menos una manzana en buen estado y un gusano.
        PRECONDICIONES:
            * No tiene. 
    */
    if(hayManzanaEnBuenEstado() && hayGusano())
    then {
        PudrirManzanaRetirandoUnGusano()
    }
}

procedure PudrirManzanaRetirandoUnGusano() {
    /*
        PROPÓSITO:
            * Pudre una manzana en buen estado, retirando un gusano en la celda actual.
        PRECONDICIONES:
            * Debe haber, en la celda actual, al menos una manzana en buen estado y al menos un gusano.
        OBSERVACIONES:
            * Las manzanas en buen estado se representan con bolitas de color Rojo y los    gusanos con bolitas de color Verde. Las manzanas podridas se representan con bolitas de color Negro.
    */
    Reemplazar_Y_Por_(Rojo, Verde, Negro)
}

// b.
procedure Reemplazar_Y_Por_(primerColorAReemplazar, segundoColorAReemplazar, colorAAgregar) {
    /*
        PROPÓSITO:
            * Reemplaza el color **primerColorAReemplazar** y el color **segundoColorAReemplazar** por el color **colorAAgregar**.
        PARÁMETROS:
            * primerColorAReemplazar: Color - Describe el primer color a reemplazar. 
            * segundoColorAReemplazar: Color - Describe el segundo color a reemplazar.
            * colorAAgregar: Color - Describe el color a agregar.
        PRECONDICIONES:
            * Debe haber al menos una bolita de color **primerColorAReemplazar** y al menos una de color **segundoColorAReemplazar** en la celda actual.
    */
    Sacar(primerColorAReemplazar)
    Sacar(segundoColorAReemplazar)
    Poner(colorAAgregar)
}

// c.

procedure PudrirHasta_Manzanas(cantidadAPudrir) {
    /*
        PROPÓSITO:
            * Pudre a lo sumo **cantidadAPudrir** manzanas en buen estado en la celda actual. Si la cantidad dada es mayor que el número de manzanas en buen estado o el número de gusanos en la celda actual, pudre una cantidad igual al mínimo entre el total de manzanas en buen estado y el total de gusanos. 
        PARÁMETROS:
            * cantidadAPudrir: Número - Describe la cantidad máxima de manzanas a pudrir.
        PRECONDICIONES:
            * **cantidadAPudrir** debe ser un número mayor cero.
    */
    repeat (cantidadAPudrir) {
        PudrirManzana()   
    }
}

function hayManzanaEnBuenEstado() {
    /*
        PROPÓSITO:
            * Indica si en la celda actual hay al menos una manzana en buen estado
        TIPO: Booleano.
        PRECONDICIONES:
            * No tiene (es una función total).
    */
    return (hayBolitas(ColorManzana()))
}

function hayGusano() {
    /*
        PROPÓSITO:
            * Indica si en la celda actual hay al menos un gusano.
        TIPO: Booleano.
        PRECONDICIONES:
            * No tiene (es una función total).
    */
    return (hayBolitas(ColorGusano()))
}

function ColorManzana() {
    /*
        PROPÓSITO: 
            * Describe el color de las bolitas usadas para representar a las manzanas.
        TIPO: Color.
        PRECONDICIONES:
            * No tiene (es una función total).
    */
    return (Rojo)
}

function ColorGusano() {
    /*
        PROPÓSITO:
            * Describe el color de las bolitas usadas para representar a los gusanos.
        TIPO: Color.
        PRECONDICIONES:
            * No tiene (es una función total).
    */
    return (Verde)