// Definir funciones totales que sean verdaderas (describan al valor de verdad
// Verdadero) para cada uno de los siguientes casos. Recordar que es conveniente
// utilizar funciones para expresar subtareas, de forma que las expresiones utilizadas
// no queden imposibles de entender. Recordar también que antes de escribir el código
// de una operación, debe escribirse el contrato de la misma (nombre, parámetros,
// propósito y precondiciones).
// a. Cuando la celda actual tiene más de 5 bolitas en total.
// b. Cuando la celda actual tiene al menos 5 bolitas en total.
// c. Cuando la celda actual tiene al menos 5 bolitas en total y el borde se
// encuentra justo al Este de la misma.
// d. Cuando la celda actual tiene una celda lindante al Norte o al Este.
// e. Cuando la celda actual tiene bolitas de todos los colores.
// f. Cuando en la celda actual faltan bolitas de al menos un color (dar una
// solución sin usar la función del ı́tem anterior y otra usándola).

// a.
function hayMásDe5BolitasEnTotalEnLaCeldaActual() {
    /*
        PROPÓSITO:
            * Indica si hay más de 5 bolitas en la celda actual.
        TIPO: Booleano.
        PRECONDICIONES:
            * Ninguna (es una función total).
    */ 
    return (nroBolitas(Azul) + nroBolitas(Negro) + nroBolitas(Rojo) + nroBolitas(Verde) > 5)
}

// b.
function hayAlMenosDe5BolitasEnLaCeldaActual() {
    /*
        PROPÓSITO:
            * Indica si hay al menos 5 bolitas en total en la celda actual..
        TIPO: Booleano.
        PRECONDICIONES:
            *Ninguna (es una función total).
    */
    return (nroBolitas(Azul) + nroBolitas(Negro) + nroBolitas(Rojo) + nroBolitas(Verde) >= 5)
}

// d.
function hayUnaCeldaAlNorteOAlEste() {
    /*
        PROPÓSITO:
            * Indica si la celda actual tiene una celda lindante al Norte o una al Este.
        TIPO: Booleano.
        PRECONDICIONES:
            * Ninguna (es una función total).
    */
    return (puedeMover(Norte) || puedeMover(Este))
}

// e.
function hayDeTodosLosColores() {
    /*
        PROPÓSITO:
            * Indica si en la celda actual hay bolitas de todos los colores.
        TIPO: Booleano.
        PRECONDICIONES:
            * Ninguna (es una función total).
    */
    return (hayBolitas(Azul) && hayBolitas(Negro) && hayBolitas(Rojo) && hayBolitas(Verde))
}

// f.
function noHayDeTodosLosColores() {
    /*
        PROPÓSITO:
            * Indica si en la celda actual faltan bolitas de al menos un color.
        TIPO: Booleano.
        PRECONDICIONES:
            * Ninguna (es una función total).
    */
    return (not hayDeTodosLosColores())
}
 
function noHayDeTodosLosColoresII() {
    /*
        PROPÓSITO:
            * Indica si en la celda actual faltan bolitas de al menos un color.
        TIPO: Booleano.
        PRECONDICIONES:
            * Ninguna (es una función total).
    */
    return (not hayBolitas(Azul) || not hayBolitas(Negro) || not hayBolitas(Rojo) || not hayBolitas(Verde))
}