// Hacer el procedimiento PasarPalabraActualAMayúsculas() que suponiendo
// que en la fila actual se codifica una palabra en minúsculas usando bolitas, ponga la
// misma palabra en mayúsculas en la fila al Norte.
// - Cada letra se representa con una cantidad diferente de bolitas negras, según
// un código numérico llamado ASCII.
// - En la celda más al Oeste de la fila actual se codifica la cantidad de letras
// usando bolitas rojas.
// - La primera letra de la palabra está en la celda lindante al Este de la que
// contiene la cantidad de letras.
// - En el código ASCII si las letras mayúsculas se codifican con un número N
// entonces la misma letra minúscula se representa con N+32 (pej. la ‘a’
// minúsculas se representa con el número 97 y la ‘A’ mayúsculas, con el 65).
// - El cabezal se encuentra en la celda más al Oeste de una fila donde hay una
// palabra representada.

procedure PasarPalabraActualAMayúsculas() {
    /*
        PROPÓSITO:
            * Pone la palabra codificada en la fila actual, en mayúsculas en la fila al Norte.
        PRECONDICIONES:
            * El cabezal inicia en el borde Oeste de la palabra.
            * En la celda actual debe indicarse la cantidad de caracteres de la palabra.
            * Debe existir la cantidad de celdas igual a la cantidad de caracteres indicado en la celda actual.
            * Debe existir al menos una celda al Norte de la celda actual.
            * La celda al Norte de cada caracter debe estar vacía. 
            * La palabra codificada a convertir debe estar en minúscula. 
    */
    repeat (nroBolitas(Rojo)) {
        Mover(Este)
        PasarLetraAMayúscula(nroBolitas(Negro))
    }
}

procedure PasarLetraAMayúscula(códigoLetra) {
    /*
        PROPÓSITO:
            * Pone la letra codificada en la celda actual en mayúscula en la celda lindante en la dirección Norte. 
        PARÁMETROS:
            * códigoLetra: Número - Código ASCII de la letra en la celda actual.
        PRECONDICIONES:
            * Debe haber una letra en la celda actual.
        OBSERVACIONES:
            * Cada letra se representa con una cantidad diferente de bolitas negras, según
              un código numérico llamado ASCII.
    */
    repeat (nroBolitas(Negro)-32) {
        Mover(Norte)
        Poner(Negro)
        Mover(Sur)
    }
}